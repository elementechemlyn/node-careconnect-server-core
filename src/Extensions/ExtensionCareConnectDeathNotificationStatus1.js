// This code was autogenerated from BuildExtensions.py

const FHIRServer = require('../..')
const CareConnectBaseExtension = require('../BaseClasses/CareConnect-BaseExtension')

class ExtensionCareConnectDeathNotificationStatus1 extends CareConnectBaseExtension {
  constructor (opt) {
    super(opt)
    opt && delete opt.resourceType
    Object.assign(this, opt)
    this.url = 'https://fhir.hl7.org.uk/STU3/StructureDefinition/Extension-CareConnect-DeathNotificationStatus-1'
  }
  set deathNotificationStatus (value) {
    // let max = 1
    // let min = 1
    let ext = new CareConnectBaseExtension()
    ext.url = 'deathNotificationStatus'
    ext.valueCodeableConcept = value
    // TODO Check max/clear existing slice
    if (!this.__data.extension) {
      this.__data.extension = []
    }
    this.__data.extension.push(ext)
  }

  get deathNotificationStatus () {
    let ext = this.__data.extension.find(e => e.url === 'deathNotificationStatus')
    return ext && ext.valueCodeableConcept
  }
  set systemEffectiveDate (value) {
    // let max = 1
    // let min = None
    let ext = new CareConnectBaseExtension()
    ext.url = 'systemEffectiveDate'
    ext.valueDateTime = value
    // TODO Check max/clear existing slice
    if (!this.__data.extension) {
      this.__data.extension = []
    }
    this.__data.extension.push(ext)
  }

  get systemEffectiveDate () {
    let ext = this.__data.extension.find(e => e.url === 'systemEffectiveDate')
    return ext && ext.valueDateTime
  }
}

module.exports = ExtensionCareConnectDeathNotificationStatus1
