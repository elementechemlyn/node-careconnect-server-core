// This code was autogenerated from BuildExtensions.py

const ExtensionCareConnectDataProcessor1 = require('../../../src/Extensions/ExtensionCareConnectDataProcessor1.js')

describe('Care Connect Extension ExtensionCareConnectDataProcessor1', function () {
  describe('Object constructor', function () {
    it('Can create object', function () {
      let ext = new ExtensionCareConnectDataProcessor1()
      expect(ext).toBeInstanceOf(ExtensionCareConnectDataProcessor1)
      expect(ext.url).toBe('https://fhir.hl7.org.uk/STU3/StructureDefinition/Extension-CareConnect-DataProcessor-1')
    })
  })
  describe('Object getters and setters', function () {
    it('Get/Set actorvalueReference', function () {
      let ext = new ExtensionCareConnectDataProcessor1()
      ext.actorvalueReference = { 'display': 'some display', 'reference': 'someref' }
      let value = ext.actorvalueReference
      expect(value.reference).toBe('someref')
      expect(value.display).toBe('some display')
    })
    it('Get/Set periodvaluePeriod', function () {
      let ext = new ExtensionCareConnectDataProcessor1()
      ext.periodvaluePeriod = {'end': 'theend', 'start': 'thestart'}
      let value = ext.periodvaluePeriod
      expect(value.end).toBe('theend')
      expect(value.start).toBe('thestart')
    })
    it('Get/Set basisvalueCoding', function () {
      let ext = new ExtensionCareConnectDataProcessor1()
      ext.basisvalueCoding = { 'code': 'somecode', 'display': 'some display' , 'system': 'somesystem' }
      let value = ext.basisvalueCoding
      expect(value.code).toBe('somecode')
      expect(value.display).toBe('some display')
    })
  })
})
