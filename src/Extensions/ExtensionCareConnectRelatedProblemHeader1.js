// This code was autogenerated from BuildExtensions.py

const FHIRServer = require('../..')
const CareConnectBaseExtension = require('../BaseClasses/CareConnect-BaseExtension')

class ExtensionCareConnectRelatedProblemHeader1 extends CareConnectBaseExtension {
  constructor (opt) {
    super(opt)
    opt && delete opt.resourceType
    Object.assign(this, opt)
    this.url = 'https://fhir.hl7.org.uk/STU3/StructureDefinition/Extension-CareConnect-RelatedProblemHeader-1'
  }
  set type (value) {
    // let max = None
    // let min = None
    let ext = new CareConnectBaseExtension()
    ext.url = 'type'
    ext.valueCode = value
    // TODO Check max/clear existing slice
    if (!this.__data.extension) {
      this.__data.extension = []
    }
    this.__data.extension.push(ext)
  }

  get type () {
    let ext = this.__data.extension.find(e => e.url === 'type')
    return ext && ext.valueCode
  }
  set target (value) {
    // let max = 1
    // let min = 1
    let ext = new CareConnectBaseExtension()
    ext.url = 'target'
    ext.valueReference = value
    // TODO Check max/clear existing slice
    if (!this.__data.extension) {
      this.__data.extension = []
    }
    this.__data.extension.push(ext)
  }

  get target () {
    let ext = this.__data.extension.find(e => e.url === 'target')
    return ext && ext.valueReference
  }
}

module.exports = ExtensionCareConnectRelatedProblemHeader1
